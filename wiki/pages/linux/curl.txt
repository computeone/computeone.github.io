**命令：curl**
\\
在Linux中curl是一个利用URL规则在命令行下工作的文件传输工具，可以说是一款很强大的http命令行工具。它支持文件的上传和下载，是综合传输工具，但按传统，习惯称url为下载工具。\\
\\
语法：# curl [option] [url]\\
常见参数：\\
\\
<code>
-A/--user-agent <string>              设置用户代理发送给服务器
-b/--cookie <name=string/file>    cookie字符串或文件读取位置
-c/--cookie-jar <file>                    操作结束后把cookie写入到这个文件中
-C/--continue-at <offset>            断点续转
-D/--dump-header <file>              把header信息写入到该文件中
-e/--referer                                  来源网址
-f/--fail                                          连接失败时不显示http错误
-o/--output                                  把输出写到该文件中
-O/--remote-name                      把输出写到该文件中，保留远程文件的文件名
-r/--range <range>                      检索来自HTTP/1.1或FTP服务器字节范围
-s/--silent                                    静音模式。不输出任何东西
-T/--upload-file <file>                  上传文件
-u/--user <user[:password]>      设置服务器的用户和密码
-w/--write-out [format]                什么输出完成后
-x/--proxy <host[:port]>              在给定的端口上使用HTTP代理
-#/--progress-bar                        进度条显示当前的传送状态

</code>
1、基本用法\\
\\
执行后，www.linux.com 的html就会显示在屏幕上了\\
Ps：由于安装linux的时候很多时候是没有安装桌面的，也意味着没有浏览器，因此这个方法也经常用于测试一台服务器是否可以到达一个网站
\\
2、保存访问的网页\\
2.1:使用linux的重定向功能保存\\
\\
<code># curl http://www.linux.com >> linux.html</code>
2.2:可以使用curl的内置option:-o(小写)保存网页\\
\\
<code>$ curl -o linux.html http://www.linux.com</code>
执行完成后会显示如下界面，显示100%则表示保存成功\\
\\
<code>
% Total    % Received % Xferd  Average Speed  Time    Time    Time  Current
                                Dload  Upload  Total  Spent    Left  Speed
100 79684    0 79684    0    0  3437k      0 --:--:-- --:--:-- --:--:-- 7781k
</code>
2.3:可以使用curl的内置option:-O(大写)保存网页中的文件\\
要注意这里后面的url要具体到某个文件，不然抓不下来\\
\\
<code># curl -O http://www.linux.com/hello.sh</code>
3、测试网页返回值\\
\\
<code># curl -o /dev/null -s -w %{http_code} www.linux.com</code>
Ps:在脚本中，这是很常见的测试网站是否正常的用法\\
\\
4、指定proxy服务器以及其端口\\
很多时候上网需要用到代理服务器(比如是使用代理服务器上网或者因为使用curl别人网站而被别人屏蔽IP地址的时候)，幸运的是curl通过使用内置option：-x来支持设置代理\\
\\
<code># curl -x 192.168.100.100:1080 http://www.linux.com</code>
5、cookie\\
有些网站是使用cookie来记录session信息。对于chrome这样的浏览器，可以轻易处理cookie信息，但在curl中只要增加相关参数也是可以很容易的处理cookie\\
5.1:保存http的response里面的cookie信息。内置option:-c（小写）\\
\\
<code># curl -c cookiec.txt  http://www.linux.com</code>
执行后cookie信息就被存到了cookiec.txt里面了\\
\\
5.2:保存http的response里面的header信息。内置option: -D\\
\\
<code># curl -D cookied.txt http://www.linux.com</code>
执行后cookie信息就被存到了cookied.txt里面了\\
\\
注意：-c(小写)产生的cookie和-D里面的cookie是不一样的。\\

\\
\\
http://www.cnblogs.com/duhuo/p/5695256.html